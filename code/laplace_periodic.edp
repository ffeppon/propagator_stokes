IMPORT "io.edp"
    
IMPORT "ddm.edp"

load "PETSc"                        // PETSc plugin
macro dimension()2// EOM            // 2D or 3D
include "macro_ddm.idp"             // additional DDM functions

if(!mpirank)
    mesh Th=importMesh("Th");   
broadcast(processor(0), Th); 

int[int] labPeriodic = [1,3]; 

macro P1per() P1, periodic=[[1,x],[3,x]]//
fespace Fh1per(Th, P1per);  

Mat A; 
createMat(Th, A, P1per); 

macro grad(u) [dx(u),dy(u)]// 
varf laplace(u,v)=int2d(Th)(grad(u)'*grad(v))      
                   +on(2,4,u=0)   
                   +on(10,u=0); 
A = laplace(Fh1per,Fh1per,tgv=-1); 
    
matrix rhs2 = importMatrix("rhs2"); 
    
real[int,int] RHS2(rhs2.n, rhs2.m); 
    
macro matrixToIntInt(mat,intint) 
    for[I,J,C : mat] intint(I,J) = C;   
    //EOM   

matrixToIntInt(rhs2, RHS2); 

real[int,int] rhs(Fh1per.ndof, rhs2.m), sol(Fh1per.ndof,rhs2.m); 
real[int,int] B(A.n,rhs2.m), X(A.n,rhs2.m); 
ChangeNumbering(A, RHS2, B); 
set(A, sparams = "-ksp_type preonly -pc_type lu -ksp_monitor -ksp_view -pc_mat_solver_type mumps");
KSPSolve(A,B,X); 
ChangeNumbering(A, sol, X, inverse = true, exchange = true);
    
matrix SOL = sol;     
exportMatrix(SOL); 
    
